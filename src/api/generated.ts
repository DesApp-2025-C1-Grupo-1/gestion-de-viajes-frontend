/**
 * Generated by orval v7.9.0 游꽄
 * Do not edit manually.
 * Gesti칩n de Viajes API
 * Documentaci칩n de la API para la gesti칩n de viajes
 * OpenAPI spec version: 1.0
 */
import axios from 'axios';
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios';

export interface CreateTipoVehiculoDto {
  /** Nombre del tipo de veh칤culo */
  nombre: string;
  /** Descripci칩n del tipo de veh칤culo */
  descripcion: string;
}

export interface UpdateTipoVehiculoDto { [key: string]: unknown }

export interface CreateVehiculoDto {
  /** Patente del veh칤culo (formato v치lido: ABC123 o AB123CD) */
  patente: string;
  /** Marca del veh칤culo */
  marca: string;
  /** Modelo del veh칤culo */
  modelo: string;
  /**
   * A침o de fabricaci칩n (entre 1900 y el a침o actual)
   * @minimum 1900
   * @maximum 2025
   */
  a침o: number;
  /**
   * Volumen m치ximo de carga en m췁
   * @minimum 0.01
   */
  volumen_carga: number;
  /**
   * Peso m치ximo de carga en kilogramos
   * @minimum 0.01
   */
  peso_carga: number;
  /** ID del tipo de veh칤culo (referencia a tipoVehiculo) */
  tipo: string;
  /** ID de la empresa a la que pertenece el veh칤culo */
  empresa: string;
}

export interface UpdateVehiculoDto { [key: string]: unknown }

export interface CreateEmpresaDto {
  /** Raz칩n social de la empresa */
  razon_social: string;
  /** Nombre comercial de la empresa */
  nombre_comercial: string;
  /** CUIT de la empresa (칰nico) */
  cuit: string;
  /** Domicilio fiscal */
  domicilio_fiscal: string;
  /** Tel칠fono de contacto */
  telefono: string;
  /** Correo electr칩nico */
  mail: string;
  /** Nombre del contacto de la empresa */
  nombre_contacto: string;
}

export interface UpdateEmpresaDto { [key: string]: unknown }

export interface CreateChoferDto {
  /** Nombre del chofer */
  nombre: string;
  /** Apellido del chofer */
  apellido: string;
  /** DNI del chofer */
  dni: number;
  /** Fecha de nacimiento */
  fecha_nacimiento: string;
  /** N칰mero de licencia del conductor */
  licencia: string;
  /** Tipo de licencia seg칰n clasificaci칩n nacional */
  tipo_licencia: string;
  /** N칰mero de tel칠fono del chofer */
  telefono: string;
  /** Correo electr칩nico del chofer */
  email: string;
  /** ID de la empresa transportista asignada al chofer */
  empresa: string;
  /** ID del veh칤culo asignado al chofer */
  vehiculo: string;
}

export interface UpdateChoferDto { [key: string]: unknown }

export const getGesti칩nDeViajesAPI = () => {
const appControllerGetHello = <TData = AxiosResponse<void>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/`,options
    );
  }

/**
 * @summary Crear un tipo de veh칤culo
 */
const tipoVehiculoControllerCreate = <TData = AxiosResponse<void>>(
    createTipoVehiculoDto: CreateTipoVehiculoDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/tipo_vehiculo`,
      createTipoVehiculoDto,options
    );
  }

/**
 * @summary Obtener todos los tipos de veh칤culo
 */
const tipoVehiculoControllerFindAll = <TData = AxiosResponse<void>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/tipo_vehiculo`,options
    );
  }

/**
 * @summary Obtener un tipo de veh칤culo por ID
 */
const tipoVehiculoControllerFindOne = <TData = AxiosResponse<void>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/tipo_vehiculo/${id}`,options
    );
  }

/**
 * @summary Actualizar un tipo de veh칤culo
 */
const tipoVehiculoControllerUpdate = <TData = AxiosResponse<void>>(
    id: string,
    updateTipoVehiculoDto: UpdateTipoVehiculoDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.patch(
      `/tipo_vehiculo/${id}`,
      updateTipoVehiculoDto,options
    );
  }

/**
 * @summary Eliminar un tipo de veh칤culo por ID
 */
const tipoVehiculoControllerRemove = <TData = AxiosResponse<void>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.delete(
      `/tipo_vehiculo/${id}`,options
    );
  }

/**
 * @summary Crear un veh칤culo
 */
const vehiculoControllerCreate = <TData = AxiosResponse<void>>(
    createVehiculoDto: CreateVehiculoDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/vehiculo`,
      createVehiculoDto,options
    );
  }

/**
 * @summary Obtener todos los veh칤culos
 */
const vehiculoControllerFindAll = <TData = AxiosResponse<void>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/vehiculo`,options
    );
  }

/**
 * @summary Obtener un veh칤culo por ID
 */
const vehiculoControllerFindOne = <TData = AxiosResponse<void>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/vehiculo/${id}`,options
    );
  }

/**
 * @summary Actualizar un veh칤culo
 */
const vehiculoControllerUpdate = <TData = AxiosResponse<void>>(
    id: string,
    updateVehiculoDto: UpdateVehiculoDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.patch(
      `/vehiculo/${id}`,
      updateVehiculoDto,options
    );
  }

/**
 * @summary Eliminar un veh칤culo por ID
 */
const vehiculoControllerRemove = <TData = AxiosResponse<void>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.delete(
      `/vehiculo/${id}`,options
    );
  }

/**
 * @summary Obtener todas las empresas
 */
const empresaControllerFindAll = <TData = AxiosResponse<void>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/empresa`,options
    );
  }

/**
 * @summary Crear una empresa
 */
const empresaControllerCreate = <TData = AxiosResponse<void>>(
    createEmpresaDto: CreateEmpresaDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/empresa`,
      createEmpresaDto,options
    );
  }

/**
 * @summary Obtener una empresa por ID
 */
const empresaControllerFindOne = <TData = AxiosResponse<void>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/empresa/${id}`,options
    );
  }

/**
 * @summary Actualizar una empresa
 */
const empresaControllerUpdate = <TData = AxiosResponse<void>>(
    id: string,
    updateEmpresaDto: UpdateEmpresaDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.patch(
      `/empresa/${id}`,
      updateEmpresaDto,options
    );
  }

/**
 * @summary Eliminar una empresa por ID
 */
const empresaControllerDelete = <TData = AxiosResponse<void>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.delete(
      `/empresa/${id}`,options
    );
  }

/**
 * @summary Crear un chofer
 */
const choferControllerCreate = <TData = AxiosResponse<void>>(
    createChoferDto: CreateChoferDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/chofer`,
      createChoferDto,options
    );
  }

/**
 * @summary Obtener todos los choferes
 */
const choferControllerFindAll = <TData = AxiosResponse<void>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/chofer`,options
    );
  }

/**
 * @summary Obtener un chofer por ID
 */
const choferControllerFindOne = <TData = AxiosResponse<void>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/chofer/${id}`,options
    );
  }

/**
 * @summary Actualizar un chofer
 */
const choferControllerUpdate = <TData = AxiosResponse<void>>(
    id: string,
    updateChoferDto: UpdateChoferDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.patch(
      `/chofer/${id}`,
      updateChoferDto,options
    );
  }

/**
 * @summary Eliminar un chofer por ID
 */
const choferControllerRemove = <TData = AxiosResponse<void>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.delete(
      `/chofer/${id}`,options
    );
  }

return {appControllerGetHello,tipoVehiculoControllerCreate,tipoVehiculoControllerFindAll,tipoVehiculoControllerFindOne,tipoVehiculoControllerUpdate,tipoVehiculoControllerRemove,vehiculoControllerCreate,vehiculoControllerFindAll,vehiculoControllerFindOne,vehiculoControllerUpdate,vehiculoControllerRemove,empresaControllerFindAll,empresaControllerCreate,empresaControllerFindOne,empresaControllerUpdate,empresaControllerDelete,choferControllerCreate,choferControllerFindAll,choferControllerFindOne,choferControllerUpdate,choferControllerRemove}};
export type AppControllerGetHelloResult = AxiosResponse<void>
export type TipoVehiculoControllerCreateResult = AxiosResponse<void>
export type TipoVehiculoControllerFindAllResult = AxiosResponse<void>
export type TipoVehiculoControllerFindOneResult = AxiosResponse<void>
export type TipoVehiculoControllerUpdateResult = AxiosResponse<void>
export type TipoVehiculoControllerRemoveResult = AxiosResponse<void>
export type VehiculoControllerCreateResult = AxiosResponse<void>
export type VehiculoControllerFindAllResult = AxiosResponse<void>
export type VehiculoControllerFindOneResult = AxiosResponse<void>
export type VehiculoControllerUpdateResult = AxiosResponse<void>
export type VehiculoControllerRemoveResult = AxiosResponse<void>
export type EmpresaControllerFindAllResult = AxiosResponse<void>
export type EmpresaControllerCreateResult = AxiosResponse<void>
export type EmpresaControllerFindOneResult = AxiosResponse<void>
export type EmpresaControllerUpdateResult = AxiosResponse<void>
export type EmpresaControllerDeleteResult = AxiosResponse<void>
export type ChoferControllerCreateResult = AxiosResponse<void>
export type ChoferControllerFindAllResult = AxiosResponse<void>
export type ChoferControllerFindOneResult = AxiosResponse<void>
export type ChoferControllerUpdateResult = AxiosResponse<void>
export type ChoferControllerRemoveResult = AxiosResponse<void>
